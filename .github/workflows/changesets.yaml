name: Release

on:
  push:
    branches: [main]
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - '!.changeset/**'
      - 'LICENSE'

jobs:
  version:
    name: Determine version
    runs-on: ubuntu-latest
    outputs:
      hasChangesets: ${{ steps.changesets.outputs.hasChangesets }}
      version: ${{ steps.check_tag.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Node and dependencies
        uses: ./.github/actions/install-dependencies

      - name: Install dependencies
        run: pnpm install

      - name: Create PR or Publish release
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm run ci:version
          commit: 'chore: update versions'
          title: 'chore: update versions'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check Hasura Auth tag
        id: check_tag
        if: steps.changesets.outputs.hasChangesets == 'false'
        run: |
          VERSION=$(jq -r .version package.json)
          GIT_TAG="v$VERSION"
          if [ -z "$(git tag -l | grep $GIT_TAG)" ]; then
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          fi

  test:
    name: Tests
    uses: ./.github/workflows/test.yaml

  publish:
    name: Publish Docker image
    needs:
      - test
      - version
    uses: ./.github/workflows/docker_publish.yaml
    with:
      version: ${{ needs.version.outputs.version }}
    secrets:
      AWS_PRODUCTION_ACCOUNT_ID: ${{ secrets.AWS_PRODUCTION_ACCOUNT_ID }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: GitHub release
    needs: publish
    runs-on: ubuntu-latest
    if: needs.publish.needs.version.outputs.version != ''

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create GitHub Release
        uses: taiki-e/create-gh-release-action@v1
        if: needs.version.outputs.version != ''
        with:
          changelog: CHANGELOG.md
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: refs/tags/${{ needs.version.outputs.version }}
