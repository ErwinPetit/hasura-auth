# Code generated by scruffy. DO NOT EDIT.
PROJ_DIR=$(abspath .)
NAME=goAuth

ifdef VER
VERSION=$(shell echo $(VER) | sed -e 's/^v//g' -e 's/\//_/g')
else
VERSION=$(shell cat $(PROJ_DIR)/VERSION)
endif

ifeq ($(shell uname -m),x86_64)
  ARCH?=x86_64
else ifeq ($(shell uname -m),arm64)
  ARCH?=aarch64
else ifeq ($(shell uname -m),aarch64)
  ARCH?=aarch64
endif

ifeq ($(shell uname -o),Darwin)
  OS?=darwin
else
  OS?=linux
endif

ifeq ($(CI),true)
  docker-build-options=--option system $(ARCH)-linux --extra-platforms ${ARCH}-linux
endif


.PHONY: print-vars
print-vars:  ## print all variables
	@$(foreach V,$(sort $(.VARIABLES)), \
	   $(if $(filter-out environment% default automatic, \
	   $(origin $V)),$(info $V=$($V) ($(value $V)))))

.PHONY: go-fmt
go-fmt:
	golines -w  --base-formatter=gofumpt .

.PHONY: get-version
go-get-version:  ## Return version
	@echo $(VERSION) > $(PROJ_DIR)/VERSION
	@echo $(VERSION)


.PHONY: check
go-check:  ## Run nix flake check
	nix build \
		.\#checks.$(ARCH)-$(OS).$(NAME) \
		--print-build-logs


.PHONY: build
go-build:  ## Build application and places the binary under ./result/bin
	nix build \
		.\#packages.$(ARCH)-$(OS).$(NAME) \
		--print-build-logs


.PHONY: build-docker-image
go-build-docker-image:  ## Build docker container for native architecture
	nix build $(docker-build-options) \
		.\#packages.$(ARCH)-linux.$(NAME)-docker-image \
		--print-build-logs
	docker load < result
